<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UserFb', 'doctrine');

/**
 * BaseUserFb
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $first_name
 * @property string $gender
 * @property string $last_name
 * @property string $link
 * @property string $locale
 * @property string $name
 * @property integer $timezone
 * @property string $updated_time
 * @property integer $verified
 * @property string $photo
 * @property timestamp $updated_at
 * 
 * @method integer   getId()           Returns the current record's "id" value
 * @method integer   getUserId()       Returns the current record's "user_id" value
 * @method string    getFirstName()    Returns the current record's "first_name" value
 * @method string    getGender()       Returns the current record's "gender" value
 * @method string    getLastName()     Returns the current record's "last_name" value
 * @method string    getLink()         Returns the current record's "link" value
 * @method string    getLocale()       Returns the current record's "locale" value
 * @method string    getName()         Returns the current record's "name" value
 * @method integer   getTimezone()     Returns the current record's "timezone" value
 * @method string    getUpdatedTime()  Returns the current record's "updated_time" value
 * @method integer   getVerified()     Returns the current record's "verified" value
 * @method string    getPhoto()        Returns the current record's "photo" value
 * @method timestamp getUpdatedAt()    Returns the current record's "updated_at" value
 * @method UserFb    setId()           Sets the current record's "id" value
 * @method UserFb    setUserId()       Sets the current record's "user_id" value
 * @method UserFb    setFirstName()    Sets the current record's "first_name" value
 * @method UserFb    setGender()       Sets the current record's "gender" value
 * @method UserFb    setLastName()     Sets the current record's "last_name" value
 * @method UserFb    setLink()         Sets the current record's "link" value
 * @method UserFb    setLocale()       Sets the current record's "locale" value
 * @method UserFb    setName()         Sets the current record's "name" value
 * @method UserFb    setTimezone()     Sets the current record's "timezone" value
 * @method UserFb    setUpdatedTime()  Sets the current record's "updated_time" value
 * @method UserFb    setVerified()     Sets the current record's "verified" value
 * @method UserFb    setPhoto()        Sets the current record's "photo" value
 * @method UserFb    setUpdatedAt()    Sets the current record's "updated_at" value
 * 
 * @package    megamed
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserFb extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_fb');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('first_name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('gender', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('last_name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('link', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('locale', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('timezone', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('updated_time', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('verified', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('photo', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}